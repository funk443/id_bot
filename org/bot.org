#+TITLE: Main bot file
#+AUTHOR: CToID
#+PROPERTY: header-args :tangle ../bot.py
#+OPTIONS: num:nil 

Copyright (C) 2022  CToID

This file is part of id_bot

id_bot is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published
by the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

id_bot is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.

* Table of contents :TOC_1:noexport:
- [[#the-license-notices][The license notices]]
- [[#import-packages][Import packages]]
- [[#initial-setup][Initial setup]]
- [[#main-funcions][Main funcions]]
- [[#create-necessery-directories-if-they-dont-exist][Create necessery directories if they don't exist]]
- [[#read-cog-files][Read cog files]]
- [[#important-stuff][Important stuff]]

* The license notices
#+begin_src python
"""
Copyright (C) 2022  CToID

This file is part of id_bot

id_bot is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published
by the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

id_bot is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
"""
#+end_src

* Import packages
| Package              | Description                                  |
|----------------------+----------------------------------------------|
| discord              | A discord API for python, part of discord.py |
| discord.ext.commands | Command extension for discord                |
| configparser         | For reading ini files                        |
| os                   | For file manipulations                       |
| json                 | For data storing and reading                 |
#+begin_src python
import discord, configparser, os, json
from discord.ext import commands
#+end_src

* Initial setup
** Set up intents
#+begin_src python
intents = discord.Intents.all ()
#+end_src

** Set up bot activity
#+begin_src python
activity = discord.Game (name = "GNU Emacs")
#+end_src

** Read in Discord bot token and prefix file
| File        | Description                        |
|-------------+------------------------------------|
| config.ini  | For storing tokens and other stuff |
| prefix.json | For storing prefixes               |
#+begin_src python
config = configparser.ConfigParser ()
config.read ("config.ini")

if ("prefix.json" not in os.listdir ()):
  with open ("./prefix.json", "w") as json_file:
    json.dump ({"default": "id "}, json_file, indent = 2)

with open ("./prefix.json", "r") as json_file:
  prefix = json.load (json_file)
#+end_src

** A function to get prefix for different server
#+begin_src python
async def get_prefix (bot, ctx):
  with open ("./prefix.json", "r") as json_file:
    prefix = json.load (json_file)
  try:
    return prefix[str (ctx.guild.id)]
  except:
    return prefix["default"]
#+end_src

** Define the bot
#+begin_src python
bot = commands.Bot (command_prefix = get_prefix, intents = intents, activity = activity, help_command = None)
#+end_src

* Main funcions
** Startup notice
#+begin_src python
print ("id_bot  Copyright (C) 2022  CToID")
print ("This program comes with ABSOLUTELY NO WARRANTY.")
print ("This program is free software, and you are welcome to redistribute it under certain conditions.")
print ("Check version 3 (or any later version) of GNU Affero General Public License for details.")
#+end_src

** Bot online check
This will print out a message when bot is all set and connected to discord.
#+begin_src python
@bot.event
async def on_ready ():
  print ("UP")
#+end_src

** Prefix changing
#+begin_src python
@bot.command ()
async def change_prefix (ctx, npf = None):
  if (npf != None):
    prefix[str (ctx.guild.id)] = npf
    await ctx.send (f"改成 `{npf}`")
  else:
    prefix[str (ctx.guild.id)] = prefix["default"]
    await ctx.send ("改回預設引導詞")

  with open ("./prefix.json", "w") as json_file:
    json.dump (prefix, json_file, indent = 2)
#+end_src

* Create necessery directories if they don't exist
#+begin_src python
try:
  os.mkdir ("./datas")
  os.mkdir ("./datas/reply")
except:
  pass
#+end_src

* Read cog files
This will read cog files from cogs folder.
#+begin_src python
for fn in os.listdir ("./src"):
  if (fn.endswith (".py")):
    bot.load_extension (f"src.{fn[:-3]}")
#+end_src

* Important stuff
Boilerplate code that protects users from accidentally invoking the script when they didn't intend to. 
#+begin_src python
if (__name__ == "__main__"):
  bot.run (str (config["tokens"]["discord_token"]))
#+end_src
