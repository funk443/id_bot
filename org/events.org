#+TITLE: Events
#+AUTHOR: CToID
#+PROPERTY: header-args :tangle ../src/events.py
#+OPTIONS: num:nil

Copyright (C) 2022  CToID

This file is part of id_bot

id_bot is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published
by the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

id_bot is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.

* Table of contents :TOC_1:noexport:
- [[#the-license-notices][The license notices]]
- [[#import-packages][Import packages]]
- [[#define-events-class][Define events class]]
- [[#the-message-listener-function][The message listener function]]
- [[#setup-function][Setup function]]

* The license notices
#+begin_src python
"""
Copyright (C) 2022  CToID

This file is part of id_bot

id_bot is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published
by the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

id_bot is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
"""
#+end_src

* Import packages
| Package              | Description                    |
|----------------------+--------------------------------|
| discord              | A discord API for python       |
| discord.ext.commands | Commands extension for discord |
| json                 | For reading stored data        |
| os                   | For file manipulations         |
#+begin_src python
import discord, json, os
from discord.ext import commands
#+end_src

* Define events class
#+begin_src python
class events (commands.Cog):
  def __init__ (self, bot):
    self.bot = bot
#+end_src

* The message listener function
#+begin_src python
  @commands.Cog.listener ()
  async def on_message (self, message):
#+end_src

** Check if the author is bot
To prevent infinite loop
#+begin_src python
    if ((message.author == self.bot.user) or (message.author.bot)):
      return
#+end_src

** Check if reply files exist
#+begin_src python
    if (f"reply_{message.guild.id}.json" not in os.listdir ("./datas/reply")):
      return
    else:
      with open (f"./datas/reply/reply_{message.guild.id}.json") as reply_file:
        rp = json.load (reply_file)
#+end_src

** Check if message content in reply file
#+begin_src python
    if (message.content in rp):
      if (type (rp[message.content]) == list):
        for i in rp[message.content]:
          await message.channel.send (i)
      else:
        await message.channel.send (rp[message.content])
#+end_src

* Setup function
#+begin_src python
def setup (bot):
  bot.add_cog (events (bot))
#+end_src
